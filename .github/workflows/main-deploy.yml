name: Promote by Digest

on:
  push:
    branches: [main]

env:
  REGISTRY:   ${{ vars.REGISTRY }}
  IMAGE_NAME: ${{ vars.IMAGE_NAME }}
  GKE_PROJECT:   ${{ vars.GKE_PROJECT }}
  GKE_CLUSTER:   ${{ vars.GKE_CLUSTER }}
  GKE_LOCATION:  ${{ vars.GKE_LOCATION }}
  GKE_NAMESPACE: ${{ vars.GKE_NAMESPACE || 'prod' }}
  GH_TOKEN: ${{ github.token }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Login to Quay
        run: echo "${{ secrets.QUAY_PASSWORD }}" | docker login "${REGISTRY}" -u "${{ secrets.QUAY_USERNAME }}" --password-stdin

      - name: Resolve PR tag -> digest (promote-by-digest)
        id: ref
        run: |
          set -euo pipefail
          sudo apt-get update -y && sudo apt-get install -y jq skopeo
          prs=$(gh api repos/${{ github.repository }}/commits/${{ github.sha }}/pulls -H "Accept: application/vnd.github+json")
          pr=$(echo "$prs" | jq -r '.[0].number // empty')
          head=$(echo "$prs" | jq -r '.[0].head.sha // empty')
          if [ -z "$pr" ] || [ -z "$head" ]; then
            echo "No pull request found for commit ${{ github.sha }}" >&2
            exit 1
          fi
          prtag="docker://${REGISTRY}/${IMAGE_NAME}:pr-${pr}-${head}"
          DIGEST=$(skopeo inspect --format '{{.Digest}}' "$prtag")
          echo "ref=${REGISTRY}/${IMAGE_NAME}@${DIGEST}" | tee /tmp/ref.txt
          echo "ref=${REGISTRY}/${IMAGE_NAME}@${DIGEST}" >> $GITHUB_OUTPUT
          echo "REF=${REGISTRY}/${IMAGE_NAME}@${DIGEST}" >> $GITHUB_ENV

      - name: Cosign verify (optional)
        if: steps.ref.outcome == 'success' && env.COSIGN_PUBLIC_KEY != ''
        env:
          COSIGN_PUBLIC_KEY: ${{ secrets.COSIGN_PUBLIC_KEY }}
        run: |
          cosign verify --key <(printf "%s" "${COSIGN_PUBLIC_KEY}") "$REF" || exit 1

      - name: Auth to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location:     ${{ env.GKE_LOCATION }}
          project_id:   ${{ env.GKE_PROJECT }}

      - name: Apply manifests & rollout (by digest)
        run: |
          kubectl apply -n "$GKE_NAMESPACE" -f deployment/namespace.yaml
          kubectl apply -n "$GKE_NAMESPACE" -f deployment/managed-cert.yaml
          kubectl apply -n "$GKE_NAMESPACE" -f deployment/service.yaml
          kubectl apply -n "$GKE_NAMESPACE" -f deployment/deployment.yaml
          kubectl apply -n "$GKE_NAMESPACE" -f deployment/ingress.yaml
          kubectl apply -n "$GKE_NAMESPACE" -f deployment/pvc.yaml
          kubectl -n "$GKE_NAMESPACE" set image deployment/eventflow eventflow="$REF"
          kubectl rollout status deployment/eventflow -n "$GKE_NAMESPACE"

      - name: Add traceability tag (main-<shortsha>)
        if: steps.ref.outcome == 'success'
        run: |
          SHORT=$(echo "${{ github.sha }}" | cut -c1-12)
          skopeo copy docker://$REF docker://${REGISTRY}/${IMAGE_NAME}:main-${SHORT}
