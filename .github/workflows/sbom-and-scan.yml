name: sbom-and-scan

on:
  pull_request:
  push:
    branches: [ main ]
  schedule:
    - cron: "0 6 * * 1"  # lunes 06:00 UTC

permissions:
  contents: read
  packages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ${{ vars.REGISTRY || 'ghcr.io' }}
  IMAGE: ${{ (vars.REGISTRY || 'quay.io') }}/${{ github.repository }}:${{ github.sha }}
  COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
  COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}

jobs:
  build-sbom-and-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/dependency-review-action@v4
        if: ${{ github.event_name == 'pull_request' }}

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Build & CycloneDX SBOM
        working-directory: quarkus-app
        run: ./mvnw -B -DskipTests org.cyclonedx:cyclonedx-maven-plugin:makeAggregateBom

      - name: Build image
        run: docker build -f quarkus-app/src/main/docker/Dockerfile.jvm -t "$IMAGE" quarkus-app

      - name: Generate image SBOM (Syft CycloneDX)
        uses: anchore/syft-action@v1
        with:
          image: ${{ env.IMAGE }}
          format: cyclonedx-json
          output: sbom-image.cdx.json

      - name: Scan (Grype) - PR fail on High, main on Critical
        id: grype
        uses: anchore/scan-action@v3
        with:
          image: ${{ env.IMAGE }}
          fail-build: true
          severity-cutoff: ${{ github.event_name == 'pull_request' && 'high' || 'critical' }}

      - name: Upload SBOMs
        uses: actions/upload-artifact@v4
        with:
          name: sboms
          path: |
            quarkus-app/target/bom.json
            sbom-image.cdx.json

      - name: Cosign sign (keyless)
        if: ${{ vars.SIGN_KEYLESS == 'true' }}
        run: cosign sign --keyless --yes "$IMAGE"

      - name: Write cosign private key
        if: ${{ env.COSIGN_PRIVATE_KEY != '' }}
        run: printf "%s" "$COSIGN_PRIVATE_KEY" > cosign.key

      - name: Cosign sign (key-pair)
        if: ${{ env.COSIGN_PRIVATE_KEY != '' }}
        env:
          COSIGN_PASSWORD: ${{ env.COSIGN_PASSWORD }}
        run: cosign sign --key cosign.key --yes "$IMAGE"

      - name: Cosign attach SBOM
        if: ${{ vars.SIGN_ATTACH_SBOM == 'true' }}
        run: cosign attach sbom --sbom sbom-image.cdx.json --type cyclonedx "$IMAGE"
