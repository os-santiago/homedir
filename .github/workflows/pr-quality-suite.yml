name: PR Quality — Suite

on:
  pull_request:

permissions:
  contents: read
  security-events: write

concurrency:
  group: qa-suite-${{ github.event.pull_request.number }}
  cancel-in-progress: false

jobs:
  paths:
    name: Detect changed areas
    runs-on: ubuntu-latest
    outputs:
      app_changed: ${{ steps.filter.outputs.app }}
      deps_changed: ${{ steps.filter.outputs.deps }}
    steps:
      - uses: actions/checkout@v5
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            app:
              - 'quarkus-app/**'
              - '!**/*.md'
            deps:
              - '**/pom.xml'

  style:
    name: style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Setup Java
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: '21'
          cache: maven
      - name: Run Spotless
        working-directory: quarkus-app
        run: ./mvnw --batch-mode spotless:check

  static:
    name: static
    needs: paths
    if: needs.paths.outputs.app_changed == 'true'
    uses: ./.github/workflows/pr-static-analysis.yml
    secrets: inherit

  arch:
    name: arch
    needs: paths
    if: needs.paths.outputs.app_changed == 'true'
    uses: ./.github/workflows/pr-architecture-rules.yml
    secrets: inherit

  tests_cov:
    name: tests_cov
    needs: paths
    if: needs.paths.outputs.app_changed == 'true'
    uses: ./.github/workflows/pr-tests-coverage.yml
    secrets: inherit

  deps:
    name: deps
    needs: paths
    uses: ./.github/workflows/pr-deps-hygiene.yml
    secrets: inherit

  summary:
    name: summary
    needs: [style, static, arch, tests_cov, deps]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Quality Suite Summary
        run: |
          echo "## PR Quality — Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- Style:       ${{ needs.style.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Static:      ${{ needs.static.result || 'skipped' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Arch:        ${{ needs.arch.result   || 'skipped' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Tests/Cover: ${{ needs.tests_cov.result || 'skipped' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Deps:        ${{ needs.deps.result   || 'skipped' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "_Los reportes detallados están adjuntos como artifacts de cada job._" >> $GITHUB_STEP_SUMMARY
